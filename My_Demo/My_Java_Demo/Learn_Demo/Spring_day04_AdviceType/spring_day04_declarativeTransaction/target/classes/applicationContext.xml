<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="jdbc.properties"></context:property-placeholder>

    <context:component-scan base-package="com.fff.service"></context:component-scan>
    <context:component-scan base-package="com.fff.dao"></context:component-scan>

    <!--jdbc.mysql.driver=com.mysql.jdbc.Driver-->
    <!--jdbc.url=jdbc:mysql://localhost:3306/bydb-->
    <!--jdbc.username=root-->
    <!--jdbc.password=123-->

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.mysql.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">-->
    <!--<property name="driverClassName" value="${jdbc.mysql.driver}"></property>-->
    <!--<property name="url" value="${jdbc.url}"></property>-->
    <!--<property name="username" value="${jdbc.username}"></property>-->
    <!--<property name="password" value="${jdbc.password}"></property>-->
    <!--</bean>-->

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--spring 基于XML 的声明式事务配置-->
    <!--1，配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--
        2，配置事务的通知
        id是事务通知的唯一标识    transaction-manager是给事务通知提供一个事务管理器的引用
    -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--
             5，配置事务的属性，在事务通知tx:advice标签的内部，
         -->
        <tx:attributes>
            <!--propagation     事务传播行为 默认 REQUIRED 表示一定会有事务 增删改选择默认就可以 查询选择SUPPORTS -->
            <!--isolation       事务隔离级别 默认 DEFAULT 表示使用数据库的默认隔离级别-->
            <!--timeout         事务超时的时间 默认 -1 表示永不超时，以秒为单位 -->
            <!--read-only       事务是否只读 默认 false，查询方法设置为true 只读，-->
            <!--rollback-for    将被触发进行回滚的 Exception(s) 当产生对应异常的时候，事务回滚，产生其他异常的时候
                                事务不回滚。。。。没有默认值的话就是所有的异常全部回滚
            -->
            <!--no-rollback-for 不被触发进行回滚的 Exception(s)
                                指定一个异常吗，当产生这个异常的时候，事务不回滚，产生其他异常时，事务回滚
                                没有默认值的话，任何异常都可以回滚
            -->
            <tx:method name="*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"></tx:method>
        </tx:attributes>
    </tx:advice>

    <!--3，配置AOP，配置切入点表达式-->
    <aop:config>
        <!--com.fff.service..*(..)  service包下面的所有的方法-->
        <aop:pointcut id="pointcut1" expression="execution(* com.fff.service..*(..))"></aop:pointcut>
        <!--4，建立事务通知，和切入点表达式的对应关系 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut1"></aop:advisor>

    </aop:config>


</beans>